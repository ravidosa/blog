<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>//localhost:1313/</link>
    <description>Recent content on </description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 02 Jan 2025 00:00:00 +0800</lastBuildDate>
    <atom:link href="//localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Project Euler] Day 2: Even Fibonacci Numbers</title>
      <link>//localhost:1313/posts/020125-project-euler-day-2/</link>
      <pubDate>Thu, 02 Jan 2025 00:00:00 +0800</pubDate>
      <guid>//localhost:1313/posts/020125-project-euler-day-2/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with $1$ and $2$, the first $10$ terms will be:&#xA;$$1, 2, 3, 5, 8, 13, 21, 34, 55, 89, \dots$$&#xA;By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ravidosa/euler/blob/main/p2.py&#34;&gt;code&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;parameters&#34;&gt;Parameters&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$n = 1000$: upper bound on terms&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;https://en.wikipedia.org/wiki/Fibonacci_sequence&#34;&gt;Fibonacci sequence&lt;/a&gt; is straightforward to generate. Checking if every term is even and adding it to the running total if so arrives at the solution efficiently.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Project Euler] Day 1: Multiples of 3 and 5</title>
      <link>//localhost:1313/posts/010125-project-euler-day-1/</link>
      <pubDate>Wed, 01 Jan 2025 00:00:00 +0800</pubDate>
      <guid>//localhost:1313/posts/010125-project-euler-day-1/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;If we list all the natural numbers below $10$ that are multiples of $3$ or $5$, we get $3, 5, 6$ and $9$. The sum of these multiples is $23$.&#xA;Find the sum of all the multiples of $3$ or $5$ below $1000$.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ravidosa/euler/blob/main/p1.py&#34;&gt;code&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;parameters&#34;&gt;Parameters&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$n = 1000$: upper bound on integers being checked&lt;/li&gt;&#xA;&lt;li&gt;$m = 2$: number of factors to check divisibility for&lt;/li&gt;&#xA;&lt;li&gt;$k = 5$: upper bound on factors&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Naively, we can take advantage of Python&amp;rsquo;s list comprehension to implement a solution. Iterating over every integer between $1$ and $1000$, we can check if the integer is divisible by $3$ or $5$.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
